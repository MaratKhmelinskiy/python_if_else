
#Задачка с урока
list_1 = [1,2,3,4,5,6,19,32]
#почему нельзя обьявить переменную count1 поверх функции ?
#
def summ():
    count1 = 0
    for i in  list_1:
        count1 += 1
        # return count1
    print(count1)

(summ())

# Задача("Однокоренные"):
# Напишите функцию single_root_words, которая принимает одно обязательное слово в параметр root_word, а далее неограниченную последовательность в параметр *other_words.
# Функция должна составить новый список same_words только из тех слов списка other_words, которые содержат root_word или наоборот root_word содержит одно из этих слов.
# После вернуть список same_words в качестве результата своей работы.
#
# Пункты задачи:
# 1.Объявите функцию single_root_words и напишите в ней параметры root_world и *other_words.
# 2. Создайте внутри функции пустой список same_words, который пополнится нужными словами.
# 3. При помощи цикла for переберите предполагаемо подходящие слова.
# 4. Пропишите корректное относительно задачи условие, при котором добавляются слова в результирующий список same_words.
# 5. После цикла верните образованный функцией список same_words.
# 6. Вызовите функцию single_root_words и выведете на экран(консоль) возвращённое ей занчение.


list_ = ["лесник", "лес", "лестница", "подлесный", "дружба"]
# list_ = list_.lower(list_[i])  как привести к нижнему регистру красиво? , то есть просто
same_words = []
#первое решение
# def single_root_words(*other_words, root_word = 'лес'):
#     for i in list_:
#         if "лес" in i:
#             same_words.append(i)
#     print(same_words)
# single_root_words()

#второе решение и ошибки
# def single_root_words( root_word,*other_words = ["лесник", "лес", "лестница", "подлесный", "дружба"]):
#     for i in *other_word:
#         if "лес" in i:
#             same_words.append(i)
#     print(same_words)
# single_root_words(root_word,*other_words)
